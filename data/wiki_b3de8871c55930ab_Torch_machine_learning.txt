Title: Torch (machine learning)
URL: https://en.wikipedia.org/wiki/Torch_(machine_learning)
PageID: 42571226
Categories: Category:Deep learning software, Category:Free statistical software, Category:Lua (programming language) software, Category:Software using the BSD license
Source: Wikipedia (CC BY-SA 4.0).

-----
Torch is an open-source machine learning library, 
a scientific computing framework, and a scripting language based on Lua . [ 3 ] It provides LuaJIT interfaces to deep learning algorithms implemented in C . It was created by the Idiap Research Institute at EPFL . Torch development moved in 2017 to PyTorch , a port of the library to Python . [ 4 ] [ 5 ] [ 6 ]
torch
The core package of Torch is torch . It provides a flexible N-dimensional array or Tensor , which supports basic routines for indexing, slicing, transposing, type-casting, resizing, sharing storage and cloning. This object is used by most other packages and thus forms the core object of the library. The Tensor also supports mathematical operations like max , min , sum , statistical distributions like uniform , normal and multinomial , and basic linear algebra subprogram (BLAS) operations like dot product , matrix–vector multiplication , matrix–matrix multiplication and matrix product .
The following exemplifies using torch via its REPL interpreter:
The torch package also simplifies object-oriented programming and serialization by providing various convenience functions which are used throughout its packages. The torch.class(classname, parentclass) function can be used to create object factories ( classes ). When the constructor is called, torch initializes and sets a Lua table with the user-defined metatable , which makes the table an object .
Objects created with the torch factory can also be serialized, as long as they do not contain references to objects that cannot be serialized, such as Lua coroutines , and Lua userdata . However, userdata can be serialized if it is wrapped by a table (or metatable) that provides read() and write() methods.
nn
The nn package is used for building neural networks . It is divided into modular objects that share a common Module interface. Modules have a forward() and backward() method that allow them to feedforward and backpropagate , respectively. Modules can be joined using module composites , like Sequential , Parallel and Concat to create complex task-tailored graphs. Simpler modules like Linear , Tanh and Max make up the basic component modules. This modular interface provides first-order automatic gradient differentiation . What follows is an example use-case for building a multilayer perceptron using Modules:
Loss functions are implemented as sub-classes of Criterion , which has a similar interface to Module . It also has forward() and backward() methods for computing the loss and backpropagating gradients, respectively. Criteria are helpful to train neural network on classical tasks. Common criteria are the mean squared error criterion implemented in MSECriterion and the cross-entropy criterion implemented in ClassNLLCriterion . What follows is an example of a Lua function that can be iteratively called to train 
an mlp Module on input Tensor x , target Tensor y with a scalar learningRate :
It also has StochasticGradient class for training a neural network using stochastic gradient descent , although the optim package provides much more options in this respect, like momentum and weight decay regularization .
Other packages
Many packages other than the above official packages are used with Torch. These are listed in the torch cheatsheet. [ 7 ] These extra packages provide a wide range of utilities such as parallelism, asynchronous input/output, image processing, and so on. They can be installed with LuaRocks , the Lua package manager which is also included with the Torch distribution.
Applications
Torch is used by the Facebook AI Research Group, [ 8 ] IBM , [ 9 ] Yandex [ 10 ] and the Idiap Research Institute . [ 11 ] Torch has been extended for use on Android [ 12 ] [ better source needed ] and iOS . [ 13 ] [ better source needed ] It has been used to build hardware implementations for data flows like those found in neural networks. [ 14 ]
Facebook has released a set of extension modules as open source software. [ 15 ]
See also
Free and open-source software portal
Comparison of deep learning software
PyTorch
References
External links
Official website
v
t
e
Comparison
Apache MXNet
Apache SINGA
Caffe
Deeplearning4j
DeepSpeed
Dlib
Keras
Microsoft Cognitive Toolkit
ML.NET
OpenNN
PyTorch
TensorFlow
Theano
Torch
ONNX
OpenVINO
MindSpore
Apple Core ML
IBM Watson
Neural Designer
Wolfram Mathematica
MATLAB Deep Learning Toolbox
Category
v
t
e
Plua
LÖVE
Solar2D
LuaRocks
Decoda
SciTE
OpenResty
Prosody
Torch
Tarantool
IUP
List of applications using Lua
